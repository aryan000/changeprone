/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package changeprone;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import static java.time.Clock.system;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author aryan_000
 */
class CSVFile  
{ 
    public String kind = "";
    public String name = "";
    int [] arr = new int[10];
    
    
  public CSVFile(String st)
  {   
      int i =0;
      for (String retval: st.split(",")) {
            
          if(i==0)
          {
              kind = retval;
              i++;
          }
          else if(i==1)
          {
              name = retval;
              i++;
          }
         else if(retval.isEmpty())
         {
             arr[i-2] = 0;
             i++;
         }
          else
         {
             arr[i-2] = Integer.parseInt(retval);
             i++;
         }
                      
                   }
  } 
}
public class CandKFilter extends javax.swing.JFrame {

    /**
     * Creates new form CandKFilter
     */
    public CandKFilter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText(" ");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setText("Choose File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("File Selection");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addContainerGap(219, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     ArrayList<CSVFile> getcsv( File f)
     {
          ArrayList<CSVFile> data = new ArrayList<>();  
          FileReader fr = null;
            try {
                fr = new FileReader(f);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CandKFilter.class.getName()).log(Level.SEVERE, null, ex);
            }
            BufferedReader br = new BufferedReader(fr);
            String st;
            try {
                while ((st = br.readLine()) != null) {
//                    System.out.println(st);
                    CSVFile t = new CSVFile(st);
                    data.add(t);
                }
            } catch (IOException ex) {
                Logger.getLogger(CandKFilter.class.getName()).log(Level.SEVERE, null, ex);
            }
          
          return data;
     }
     
     
     ArrayList<String> getjavafiles( File f)
     {
         ArrayList<String> javafiles = new ArrayList<>();
        
        try {
            Workbook wb = null;
             wb = Workbook.getWorkbook(f);
            Sheet sh = wb.getSheet(0);
            System.out.println(sh.getRows());
            for(int i =1;i<sh.getRows();i++)
            {  
//                System.out.println(sh.getCell(1,i).getContents());
                javafiles.add(sh.getCell(1,i).getContents());
                
            }
        } catch (IOException ex) {
            Logger.getLogger(CandKFilter.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            Logger.getLogger(CandKFilter.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         System.out.println("before returning");
        return javafiles;
     }
     
     
     
    public void match(ArrayList<CSVFile> data , String str)
    {
        Pattern pattern = Pattern.compile(str);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String userDir = System.getProperty("user.home");
        JFileChooser candkfile = new JFileChooser(userDir+"/Desktop");
        candkfile.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnvalue = candkfile.showSaveDialog(this);
        
        File myfile= null;
        if(returnvalue == JFileChooser.APPROVE_OPTION)
        {
            myfile = candkfile.getSelectedFile();
//            System.out.println(myfolder);         
        }
             ArrayList<CSVFile> data = null  ;  
        if(myfile!=null)
        {   
            jLabel1.setText(myfile.getAbsolutePath());
//            JOptionPane.showMessageDialog(null,"The current choosen file directory is : " + myfile);
            File f = new File(myfile.getAbsolutePath());
            data = getcsv(f);
            
        } 
        
            ArrayList<String> javafiles = getjavafiles(new File("C:\\Users\\aryan_000\\Desktop\\output.xls"));
            System.out.println(javafiles.size());
        System.out.println("javafiles size is : " + data.size());
        
        
       
       ArrayList<ArrayList<String>> outer = new ArrayList<ArrayList<String>>(); 
        String line ;
      String pattern  ;
      Scanner sc = new Scanner(System.in);
      
      for(int  j =0;j<javafiles.size();j++)
      { 
          ArrayList<String> inner = new ArrayList<String>(); 
          inner.add(javafiles.get(j));
        for(int i =0;i<data.size();i++)
        {
//            System.out.println( data.get(i).name);
            line = data.get(i).name;
               
             String temp = javafiles.get(j);
             pattern = temp.substring(0,temp.lastIndexOf("."));
               
              
             
             Pattern r = Pattern.compile(pattern);
             
             Matcher m = r.matcher(line);
                if (m.find( )) {
//                    System.out.println("Found value: " + m.group(0));
                    inner.add(line);
                    
                } else {
//                    System.out.println("NO MATCH");
                }
        } 
        outer.add(inner);
      }
        
      
     for(int i =0;i<outer.size();i++)
     {
         for(int j = 0;j<outer.get(i).size();j++)
         {
             System.out.println(outer.get(i).get(j));
         }
         
         System.out.println("\n\n");
     }
         
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CandKFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CandKFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CandKFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CandKFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CandKFilter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}

